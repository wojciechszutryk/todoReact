{"version":3,"sources":["component/Task.js","component/FinishedTask.js","component/TaskList.js","component/AddTask.js","component/App.js","reportWebVitals.js","index.js"],"names":["Task","props","task","id","text","startDate","deadline","important","className","style","backgroundColor","Math","floor","random","onClick","finish","delete","finishDate","display","TaskList","state","sort","search","handleSearchChange","e","setState","target","value","handleSortChange","searchTask","tasks","filter","includes","sortFinished","finished","sortType","a","b","unfinished","this","unfinishedTasks","map","finishedTasks","FinishedTask","htmlFor","type","onChange","placeholder","length","name","React","Component","AddTask","Date","toISOString","slice","textError","handleDescriptionChange","handleCheckboxChange","checked","handleDate","handleSubmitTask","preventDefault","addTask","onSubmit","min","max","App","taskNumber","handleFinishTask","prevState","handleDeleteTask","index","indexOf","splice","newTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7101456.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../stylesheets/Task.sass'\r\n\r\nconst Task = (props) => {\r\n    const {id, text, startDate, deadline, important} = props.task;\r\n    return (\r\n        <div className='task col-sm-5 col-lg-3 mb-3 ml-1 mr-1' style={{backgroundColor: `rgb(${Math.floor(Math.random() *100)},${Math.floor(Math.random() *100)},${Math.floor(Math.random() *100)})`}}>\r\n            <p>\r\n                <span className={important ? 'important' : ''}>{text}</span>\r\n            </p>\r\n            <p>- started: <em>{startDate}</em></p>\r\n            <p>- deadline: <em>{deadline}</em></p>\r\n            <button onClick={() => props.finish(id)}>Finish</button>\r\n            <button onClick={() => props.delete(id)}>Delete</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n    const {id, text, startDate, finishDate} = props.task;\r\n    return (\r\n        <div>\r\n            <p style={{display: 'inline-block'}}>{text} - started: <em>{startDate} </em>\r\n            finished: <em>{finishDate}</em></p>\r\n            <button className='finishDelete' onClick={() => props.delete(id)}>x</button>\r\n            <hr/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task.js'\r\nimport '../stylesheets/TaskList.sass'\r\nimport FinishedTask from './FinishedTask.js'\r\n\r\nclass TaskList extends React.Component {\r\n    state = {\r\n        sort: 'dateDesc',\r\n        search: '',\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        this.setState({\r\n            search: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSortChange = (e) => {\r\n        this.setState({\r\n            sort: e.target.value\r\n        })\r\n    }\r\n\r\n    searchTask = (tasks) => {\r\n        return tasks.filter(task => task.text.includes(this.state.search));\r\n    }\r\n\r\n    sortFinished = (finished) => {\r\n        const sortType = this.state.sort;\r\n        if (sortType === 'dateDesc'){\r\n            finished.sort((a, b) => {\r\n                if (a.finishDate > b.finishDate) return -1\r\n                if (a.finishDate < b.finishDate) return 1\r\n                return 0\r\n            })\r\n        }\r\n        else if (sortType === 'dateAsc'){\r\n            finished.sort((a, b) => {\r\n                if (a.finishDate < b.finishDate) return -1\r\n                if (a.finishDate > b.finishDate) return 1\r\n                return 0\r\n            })\r\n        }\r\n        else if (sortType === 'nameDesc'){\r\n            finished.sort((a, b) => {\r\n                if (a.text > b.text) return -1\r\n                if (a.text < b.text) return 1\r\n                return 0\r\n            })\r\n        }\r\n        else if (sortType === 'nameAsc'){\r\n            finished.sort((a, b) => {\r\n                if (a.text < b.text) return -1\r\n                if (a.text > b.text) return 1\r\n                return 0\r\n            })\r\n        }\r\n        return finished;\r\n    }\r\n\r\n\r\n    render() {\r\n        let unfinished = this.props.tasks.filter(task => !task.finishDate)\r\n        let finished = this.props.tasks.filter(task => task.finishDate)\r\n        unfinished = this.searchTask(unfinished)\r\n        finished = this.sortFinished(finished)\r\n\r\n\r\n        const unfinishedTasks = unfinished.map(task => {\r\n            if(!task.finishDate){\r\n                return <Task key={task.id} task={task} finish={this.props.finish} delete={this.props.delete} />\r\n            }\r\n        });\r\n        const finishedTasks = finished.map(task => {\r\n            if(task.finishDate){\r\n                return <FinishedTask key={task.id} task={task} delete={this.props.delete}/>\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div className='currentTask container'>\r\n                <h2>Task to Do:</h2>\r\n                <label htmlFor=\"search\">\r\n                    <input type=\"text\" id=\"search\" value={this.state.search} onChange={this.handleSearchChange} placeholder=\"Search Task\"/>\r\n                </label>\r\n                <section className='unfinished row justify-content-center'>\r\n                        {unfinishedTasks.length > 0 ? unfinishedTasks : <p className='message'>Currently you have no task to do with this search criteria, you can add one by filling in the form above</p>}\r\n                </section>\r\n                <section className='finished mt-3'>\r\n                    <h3>Finished Tasks:</h3>\r\n                    <label htmlFor=\"sort\" className='mb-3'>Sort by\r\n                        <select name=\"sort\" id=\"sort\" onChange={this.handleSortChange}>\r\n                            <option value=\"dateDesc\">Finish date descending</option>\r\n                            <option value=\"dateAsc\">Finish date ascending</option>\r\n                            <option value=\"nameDesc\">Description descending</option>\r\n                            <option value=\"nameAsc\">Description ascending</option>\r\n                        </select>\r\n                    </label>\r\n                    {finishedTasks.length > 0 ? finishedTasks : <p>Task history clean</p>}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TaskList;\r\n","import React, {Component} from 'react';\r\nimport '../stylesheets/AddTask.sass'\r\n\r\nclass AddTask extends Component {\r\n    state = {\r\n        text: '',\r\n        important: false,\r\n        deadline: new Date().toISOString().slice(0,10),\r\n        textError: false\r\n    }\r\n    handleDescriptionChange = (e) => {\r\n        this.setState({\r\n            textError: false,\r\n            text: e.target.value\r\n        })\r\n    }\r\n    handleCheckboxChange = (e) => {\r\n        this.setState({\r\n            important: e.target.checked,\r\n        })\r\n    }\r\n    handleDate = (e) => {\r\n        this.setState({\r\n            deadline: e.target.value\r\n        })\r\n    }\r\n    handleSubmitTask = (e) => {\r\n        e.preventDefault()\r\n        const {text, important, deadline} = this.state;\r\n        if(!text){\r\n            this.setState({\r\n                textError: true\r\n            })\r\n            return;\r\n        }\r\n        this.props.addTask(text, important, deadline)\r\n        this.setState({\r\n            text: '',\r\n            important: false,\r\n            deadline: new Date().toISOString().slice(0,10),\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='toDoList container'>\r\n                <form className='row' onSubmit={this.handleSubmitTask}>\r\n\r\n                    <div className='col-md-4'>\r\n                        <label htmlFor=\"important\">Important</label>\r\n                        <input type=\"checkbox\" id=\"important\" checked={this.state.important} onChange={this.handleCheckboxChange}/>\r\n                    </div>\r\n\r\n                    <div className='col-md-4'>\r\n                        <label htmlFor=\"text\">Task description</label>\r\n                        <input type=\"text\" id=\"text\" value={this.state.text} onChange={this.handleDescriptionChange} placeholder={this.state.textError && `Don't add empty task`}/>\r\n                    </div>\r\n\r\n                    <div className='col-md-4'>\r\n                        <label htmlFor=\"deadline\">Deadline</label>\r\n                        <input type=\"date\" id=\"deadline\" value={this.state.deadline} onChange={this.handleDate} min={new Date().toISOString().slice(0,10)} max='2024-01-31'/>\r\n                    </div>\r\n\r\n                    <div className='col-8 offset-2 mt-4 col-md-2 offset-md-5 mt-md-1'>\r\n                        <button>Add</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTask;","import React, {Component} from 'react';\nimport '../stylesheets/App.sass';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TaskList from './TaskList.js';\nimport AddTask from './AddTask.js';\n\nclass App extends Component {\n  taskNumber = 3;\n  state = {\n    tasks: [\n      {\n        id: 0,\n        text: 'Wash a Car',\n        startDate: new Date().toISOString().slice(0,10),\n        deadline: '2022-12-31',\n        important: false,\n        finishDate: false,\n      },\n      {\n        id: 1,\n        text: 'Go for a walk',\n        startDate: '2019-01-30',\n        deadline: '2020-11-30',\n        important: false,\n        finishDate: false,\n      },\n      {\n        id: 2,\n        text: 'Do the shopping',\n        startDate: '2020-12-30',\n        deadline: '2021-12-30',\n        important: true,\n        finishDate: false,\n      },\n      {\n        id: 4,\n        text: 'Buy a gift for John',\n        startDate: new Date().toISOString().slice(0,10),\n        deadline: '2022-12-31',\n        important: true,\n        finishDate: '2022-12-31',\n      },\n    ]\n  }\n  handleFinishTask = (id) => {\n    const tasks = [...this.state.tasks];\n    tasks.filter(task => {\n      if (task.id === id) {\n        task.finishDate = new Date().toISOString().slice(0,10)\n        }\n      }\n    )\n    this.setState(prevState => ({\n      tasks\n    }))\n  }\n  handleDeleteTask = (id) => {\n    const tasks = [...this.state.tasks];\n    tasks.filter(task => {\n          if (task.id === id) {\n            const index = tasks.indexOf(task)\n            tasks.splice(index,1);\n          }\n        }\n    )\n    this.setState(prevState => ({\n      tasks\n    }))\n  }\n  addTask = (text, important, deadline) => {\n    const tasks = [...this.state.tasks]\n    const newTask = {\n      id: this.taskNumber,\n      text,\n      startDate: new Date().toISOString().slice(0,10),\n      deadline,\n      important,\n      finishDate: false,\n    }\n    this.setState({\n      tasks: [...tasks, newTask]\n    })\n    this.taskNumber++;\n  }\n  render(){\n    return (\n        <div className=\"App container-fluid\">\n          <div className=\"row\">\n            <h1 className=\"jumbotron text-center p-2 col-12\" >ToDo App</h1>\n            <section className='col-12 mb-3'>\n              <AddTask addTask={this.addTask}/>\n            </section>\n            <hr className=\"col-12\"/>\n            <article className='col-12'>\n              <TaskList tasks={this.state.tasks} finish={this.handleFinishTask} delete={this.handleDeleteTask}/>\n            </article>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}