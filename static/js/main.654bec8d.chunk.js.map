{"version":3,"sources":["component/styledComponents.js","component/Task.js","component/FinishedTask.js","component/TaskList.js","component/AddTask.js","component/App.js","reportWebVitals.js","index.js"],"names":["ParentButton","styled","button","TransactionButton","theme","spacing","xs","sm","StyledColorInput","input","SubmitButton","DeleteButton","Task","normal","colors","purple","dark","gray","white","props","useState","task","color","col","setCol","timeoutId","setTimeoutId","_id","text","startDate","deadline","important","daysLeft","Math","ceil","Date","daysLeftCommunicate","className","style","backgroundColor","border","borderColor","hex","alpha","match","map","x","parseInt","r","g","b","hex2rgba","slice","buttonType","onClick","finish","icon","faCheckSquare","type","onChange","e","clearTimeout","target","value","timeout","setTimeout","handleColorChange","handleChange","delete","faTrashAlt","finishDate","fontSize","position","transform","TaskList","state","sort","search","handleSearchChange","setState","handleSortChange","searchTask","tasks","filter","includes","sortFinished","finished","sortType","a","unfinished","this","unfinishedTasks","random","toString","finishedTasks","FinishedTask","htmlFor","id","placeholder","length","name","React","Component","AddTask","getTime","toISOString","textError","handleDescriptionChange","handleCheckboxChange","checked","handleDate","handleSubmitTask","preventDefault","addTask","onSubmit","undefined","min","max","require","config","App","toast","configure","taskNumber","setTaskNumber","setTasks","informationNotification","message","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","useEffect","axios","get","process","then","response","data","post","floor","newTask","catch","err","console","log","width","tasksCopy","forEach","index","indexOf","splice","inputColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.654bec8d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst ParentButton = styled.button`\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n`;\r\n\r\nexport const InlineButton = styled(ParentButton)`\r\n    color: rgb(100, 100, 100);\r\n    z-index: 2;\r\n    position: relative;\r\n    padding: ${({theme}) => theme.spacing.xs}px ${({theme}) => theme.spacing.sm}px;\r\n    margin: 0 ${({theme}) => theme.spacing.xs}px;\r\n    border-radius: ${({theme}) => theme.spacing.xs}px;\r\n    border-style: none;\r\n    background-color: #fff;\r\n    overflow: hidden;\r\n    font-family: 'Roboto', sans-serif;\r\n    font-weight: 600;\r\n    &::after{\r\n        content: \"\";\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 3px;\r\n        bottom: 0;\r\n        left: -100%;\r\n        background-color: #000;\r\n        transition: .3s cubic-bezier(0.61, 0.01, 0.87, 1.01);\r\n    }\r\n    \r\n    &:hover::after{\r\n        left: 0;\r\n    }\r\n`;\r\n\r\nexport const TransactionButton = styled(ParentButton)`\r\n  position: relative;\r\n  width: 100px;\r\n  height: 50px;\r\n  padding: 3px 2px;\r\n  border: 1px solid black;\r\n  color: black;\r\n  background-color: #eee;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: .1s .1s;\r\n  text-decoration: none;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  letter-spacing: .3px;\r\n  font-weight: 600;\r\n  z-index: 3;\r\n  font-family: 'Trebuchet MS', sans-serif;\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    width: 0;\r\n    height: 0;\r\n    background-color: grey;\r\n    line-height: 100%;\r\n    transition: width .15s linear, height .25s .17s;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover::before {\r\n    width: 100%;\r\n    height: 50%;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: 50%;\r\n    left: 0;\r\n    width: 0;\r\n    height: 0;\r\n    background-color: grey;\r\n    transition: width .15s linear, height .25s .17s;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:after {\r\n    height: 50%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const StyledColorInput = styled.input`\r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 50%;\r\n    border: 3px solid gray;\r\n`;\r\n\r\nexport const SubmitButton = styled(ParentButton)`\r\n    display: inline;\r\n    width: 30px !important;\r\n    height: 25px !important;\r\n    margin-top: 10px;\r\n    padding: 3px 4px;\r\n    border: none;\r\n    line-height: 12px;\r\n    background-color: gray;\r\n    text-decoration: none;\r\n    color: white;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    letter-spacing: .08em;\r\n    text-transform: uppercase;\r\n    position: relative;\r\n    transition: background-color .6s ease;\r\n    overflow: hidden;\r\n    &:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        width: 0;\r\n        height: 0;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform-style: flat;\r\n        transform: translate3d(-50%,-50%,0);\r\n        background: rgba(255,255,255,.1);\r\n        border-radius: 100%;\r\n        transition: width .3s ease, height .3s ease;\r\n    }\r\n    &:focus,\r\n        &:hover {\r\n            background: orange;\r\n    }\r\n    &:active {\r\n        &:after {\r\n            width: 200px;\r\n            height: 200px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DeleteButton = styled(SubmitButton)`\r\n    display: flex;\r\n    justify-content: center;\r\n    height: 20px;\r\n    margin: 0;\r\n    padding: 2px;\r\n    background-color: gray;\r\n    transition: transform .1s linear;\r\n      & svg path {\r\n        transition: transform .2s linear;\r\n      }\r\n    &:hover{\r\n      & svg path {\r\n        transform-origin: center;\r\n        transform: rotate(360deg);\r\n      }\r\n    }\r\n    &:focus,\r\n      &:hover {\r\n        background: red;\r\n    }\r\n`;\r\n\r\nexport const AddBudgetButton = styled(TransactionButton)`\r\n    margin-top: ${({theme}) => theme.spacing.xs}px;\r\n    border-radius: ${({theme}) => theme.spacing.normal}px;\r\n    height: 40px;\r\n    font-family: 'Times New Roman', sans-serif;\r\n    font-weight: 500;\r\n    font-size: .8rem;\r\n    &::before{\r\n      background-color: ${({theme}) => theme.colors.purple.dark};\r\n      border-bottom-left-radius: ${({theme}) => theme.spacing.normal}px;\r\n      border-bottom-right-radius: ${({theme}) => theme.spacing.normal}px;\r\n    }\r\n    &:after{\r\n      background-color: ${({theme}) => theme.colors.purple.dark};\r\n      border-top-left-radius: ${({theme}) => theme.spacing.normal}px;\r\n      border-top-right-radius: ${({theme}) => theme.spacing.normal}px;\r\n    }\r\n    &:hover{\r\n      border-color: ${({theme}) => theme.colors.gray.white};\r\n    }\r\n`;","import React from 'react';\r\nimport '../stylesheets/Task.sass'\r\nimport {useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTrashAlt, faCheckSquare} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {DeleteButton, StyledColorInput, SubmitButton} from \"./styledComponents\";\r\n\r\nconst Task = (props) => {\r\n    const [col, setCol] = useState(props.task.color);\r\n    const [timeoutId, setTimeoutId] = useState(0);\r\n    const {_id, text, startDate, deadline, important} = props.task;\r\n\r\n    const hex2rgba = (hex, alpha = 1) => {\r\n        const [r, g, b] = hex.match(/\\w\\w/g).map(x => parseInt(x, 16));\r\n        return `rgba(${r+r/3},${g+g/3},${b+b/3},${alpha})`;\r\n    };\r\n\r\n    const handleChange = function (_id, e) {\r\n        clearTimeout(timeoutId)\r\n        setCol(e.target.value)\r\n        const timeout = setTimeout(() => props.handleColorChange(_id, e.target.value), 1000);\r\n        setTimeoutId(timeout)\r\n    }\r\n\r\n    const daysLeft = Math.ceil((new Date(deadline)-new Date())/1000/60/60/24);\r\n    const daysLeftCommunicate = daysLeft >= 0 ? `${daysLeft} days left` : `${-daysLeft} days delay`;\r\n\r\n    return (\r\n        <div className='task col-sm-5 col-lg-3 mb-3 ml-1 mr-1'\r\n             style={{backgroundColor: col, border: `7px solid`, borderColor: important ? `${hex2rgba(col)}` : `${col}`}}>\r\n            <p>\r\n                <span className={important ? 'importantColor' : ''}>{text}</span>\r\n            </p>\r\n            <p>- started: <em>{startDate.slice(0,10)}</em></p>\r\n            <p>- deadline: <em className={daysLeft < 0 ? 'importantColor' : ''}>{daysLeftCommunicate}</em></p>\r\n            <SubmitButton buttonType={'delete'} onClick={() => props.finish(_id)}>\r\n                <FontAwesomeIcon icon={faCheckSquare} />\r\n            </SubmitButton>\r\n            <StyledColorInput type=\"color\" onChange={(e) => handleChange(_id, e)}/>\r\n            <DeleteButton buttonType={'delete'} onClick={() => props.delete(_id)}>\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n            </DeleteButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport {DeleteButton} from \"./styledComponents\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Task = (props) => {\r\n    const {_id, text, startDate, finishDate} = props.task;\r\n    return (\r\n        <div className={'finishedWrapper container'}>\r\n            <div className={'row'}>\r\n                <div className={'row col-12 col-lg-10 offset-lg-1'}>\r\n                    <span className={'col-10 order-1 col-sm-4'}>{text}</span>\r\n                    <span className={'col-6 order-3 col-sm-3'}>started: <em>{startDate.slice(0,10)} </em></span>\r\n                    <span className={'col-6 order-4 col-sm-3'}>finished: <em>{finishDate.slice(0,10)}</em></span>\r\n                    <div className='col-2 order-2 order-sm-12'>\r\n                        <DeleteButton\r\n                            buttonType={'delete'}\r\n                            onClick={() => props.delete(_id)}\r\n                            style={{fontSize: '14px', position: 'relative'}}\r\n                        >\r\n                            <FontAwesomeIcon style={{transform: 'translateY(20%)', position: 'absolute'}} icon={faTrashAlt} />\r\n                        </DeleteButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task.js'\r\nimport '../stylesheets/TaskList.sass'\r\nimport FinishedTask from './FinishedTask.js'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheckSquare} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass TaskList extends React.Component {\r\n    state = {\r\n        sort: 'dateDesc',\r\n        search: '',\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        this.setState({\r\n            search: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSortChange = (e) => {\r\n        this.setState({\r\n            sort: e.target.value\r\n        })\r\n    }\r\n\r\n    searchTask = (tasks) => {\r\n        return tasks.filter(task => task.text.includes(this.state.search));\r\n    }\r\n\r\n    sortFinished = (finished) => {\r\n        const sortType = this.state.sort;\r\n        if (sortType === 'dateDesc'){\r\n            finished.sort((a, b) => {\r\n                if (a.finishDate > b.finishDate) return -1\r\n                if (a.finishDate < b.finishDate) return 1\r\n                return 0\r\n            })\r\n        }\r\n        else if (sortType === 'dateAsc'){\r\n            finished.sort((a, b) => {\r\n                if (a.finishDate < b.finishDate) return -1\r\n                if (a.finishDate > b.finishDate) return 1\r\n                return 0\r\n            })\r\n        }\r\n        else if (sortType === 'nameDesc'){\r\n            finished.sort((a, b) => {\r\n                if (a.text > b.text) return -1\r\n                if (a.text < b.text) return 1\r\n                return 0\r\n            })\r\n        }\r\n        else if (sortType === 'nameAsc'){\r\n            finished.sort((a, b) => {\r\n                if (a.text < b.text) return -1\r\n                if (a.text > b.text) return 1\r\n                return 0\r\n            })\r\n        }\r\n        return finished;\r\n    }\r\n\r\n\r\n    render() {\r\n        let unfinished = this.props.tasks.filter(task => parseInt(task.finishDate.slice(0,4))<2021)\r\n        let finished = this.props.tasks.filter(task => parseInt(task.finishDate.slice(0,4))>=2021)\r\n        unfinished = this.searchTask(unfinished)\r\n        finished = this.sortFinished(finished)\r\n\r\n        const unfinishedTasks = unfinished.map(task => {\r\n                return <Task\r\n                    key={task._id+(Math.random()*1000).toString()}\r\n                    task={task}\r\n                    finish={this.props.finish}\r\n                    delete={this.props.delete}\r\n                    handleColorChange={this.props.handleColorChange}\r\n                />\r\n        });\r\n        const finishedTasks = finished.map(task => {\r\n                return <FinishedTask key={task._id+(Math.random()*1000).toString()} task={task} delete={this.props.delete}/>\r\n        });\r\n\r\n        return (\r\n            <div className='currentTask container'>\r\n                <h2>Task to Do:</h2>\r\n                <label htmlFor=\"search\">\r\n                    <input type=\"text\" id=\"search\" value={this.state.search} onChange={this.handleSearchChange} placeholder=\"Search Task\"/>\r\n                </label>\r\n                <section className='unfinished row justify-content-center'>\r\n                        {unfinishedTasks.length > 0 ? unfinishedTasks : <p className='message'>Currently you have no task to do with this search criteria, you can add one by filling in the form above</p>}\r\n                </section>\r\n                <section className='finished mt-3'>\r\n                    <h3><FontAwesomeIcon icon={faCheckSquare} style={{color: 'gray', fontSize: '20px'}}/> Finished Tasks: <FontAwesomeIcon icon={faCheckSquare} style={{color: 'gray', fontSize: '20px'}}/></h3>\r\n                    <label htmlFor=\"sort\" className='mb-3'>Sort by\r\n                        <select name=\"sort\" id=\"sort\" onChange={this.handleSortChange}>\r\n                            <option value=\"dateDesc\">Finish date descending</option>\r\n                            <option value=\"dateAsc\">Finish date ascending</option>\r\n                            <option value=\"nameDesc\">Description descending</option>\r\n                            <option value=\"nameAsc\">Description ascending</option>\r\n                        </select>\r\n                    </label>\r\n                    {finishedTasks.length > 0 ? finishedTasks : <p>Task history clean</p>}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TaskList;\r\n","import React, {Component} from 'react';\r\nimport '../stylesheets/AddTask.sass'\r\nimport {TransactionButton} from \"./styledComponents\";\r\n\r\nclass AddTask extends Component {\r\n    state = {\r\n        text: '',\r\n        important: false,\r\n        deadline: new Date(new Date().getTime() + 7 * 24 * 60 * 60 * 1000).toISOString().slice(0,10),\r\n        textError: false\r\n    }\r\n    handleDescriptionChange = (e) => {\r\n        this.setState({\r\n            textError: false,\r\n            text: e.target.value\r\n        })\r\n    }\r\n    handleCheckboxChange = (e) => {\r\n        this.setState({\r\n            important: e.target.checked,\r\n        })\r\n    }\r\n    handleDate = (e) => {\r\n        this.setState({\r\n            deadline: e.target.value\r\n        })\r\n    }\r\n    handleSubmitTask = (e) => {\r\n        e.preventDefault()\r\n        const {text, important, deadline} = this.state;\r\n        if(!text){\r\n            this.setState({\r\n                textError: true\r\n            })\r\n            return;\r\n        }\r\n        this.props.addTask(text, important, deadline)\r\n        this.setState({\r\n            text: '',\r\n            important: false,\r\n            deadline: new Date().toISOString().slice(0,10),\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='toDoList container'>\r\n                <form className='row' onSubmit={this.handleSubmitTask}>\r\n\r\n                    <div className='col-md-4'>\r\n                        <label htmlFor=\"important\">Important</label>\r\n                        <input type=\"checkbox\" id=\"important\" checked={this.state.important} onChange={this.handleCheckboxChange}/>\r\n                    </div>\r\n\r\n                    <div className='col-md-4'>\r\n                        <label htmlFor=\"text\">Task description</label>\r\n                        <input type=\"text\" id=\"text\" value={this.state.text} onChange={this.handleDescriptionChange} placeholder={this.state.textError ? `Don't add empty task` : undefined}/>\r\n                    </div>\r\n\r\n                    <div className='col-md-4'>\r\n                        <label htmlFor=\"deadline\">Deadline</label>\r\n                        <input type=\"date\" id=\"deadline\" value={this.state.deadline} onChange={this.handleDate} min={new Date().toISOString().slice(0,10)} max='2026-01-31'/>\r\n                    </div>\r\n\r\n                    <div className='col-8 offset-2 mt-4 col-md-2 offset-md-5 mt-md-1'>\r\n                        <TransactionButton>ADD</TransactionButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTask;","import React, {useState, useEffect} from 'react';\r\nimport '../stylesheets/App.sass';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport TaskList from './TaskList.js';\r\nimport AddTask from './AddTask.js';\r\nimport axios from \"axios\";\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nrequire('dotenv').config()\r\n\r\nconst App = () => {\r\n  toast.configure();\r\n  let [taskNumber, setTaskNumber] = useState(3);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const informationNotification = (message) =>{\r\n    toast.error(message, {\r\n      position: \"bottom-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      button: false,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_SERVER_URL}/todos`)\r\n        .then(response =>{\r\n          if (response.data.length > 0){\r\n            setTasks(response.data);\r\n          }\r\n        })\r\n  },[])\r\n\r\n  const handleFinishTask = (id) => {\r\n    const tasksCopy = [...tasks];\r\n    tasksCopy.forEach(task => {\r\n      if (task._id === id) {\r\n          task.finishDate = new Date().toISOString().slice(0,10)\r\n          axios.post(process.env.REACT_APP_SERVER_URL+'/todos/update/'+id,   {\r\n            text: task.text,\r\n            startDate: task.startDate,\r\n            deadline: task.deadline,\r\n            important: task.important,\r\n            finishDate: new Date()\r\n          }).then(r => console.log(r.data))\r\n              .catch(err => console.log(err));\r\n        }\r\n      }\r\n    )\r\n    setTasks(tasksCopy);\r\n    informationNotification(\"Task finished\");\r\n  };\r\n\r\n  const handleColorChange = (id, inputColor) => {\r\n    const tasksCopy = [...tasks];\r\n    tasksCopy.forEach(task => {\r\n          if (task._id === id) {\r\n            task.color = inputColor;\r\n            axios.post(process.env.REACT_APP_SERVER_URL+'/todos/update/'+id,   {\r\n              text: task.text,\r\n              startDate: task.startDate,\r\n              deadline: task.deadline,\r\n              important: task.important,\r\n              finishDate: task.finishDate,\r\n              color: inputColor.toString(),\r\n            }).then(r => console.log(r.data))\r\n                .catch(err => console.log(err));\r\n          }\r\n        }\r\n    )\r\n    setTasks(tasksCopy);\r\n  };\r\n\r\n  const handleDeleteTask = (id) => {\r\n    const tasksCopy = [...tasks];\r\n    tasksCopy.forEach(task => {\r\n          if (task._id === id) {\r\n            const index = tasksCopy.indexOf(task)\r\n            tasksCopy.splice(index,1);\r\n            axios.delete(`${process.env.REACT_APP_SERVER_URL}/todos/${id}`)\r\n                .then(response => response)\r\n          }\r\n        }\r\n    )\r\n    setTasks(tasksCopy);\r\n    informationNotification(\"Task deleted\");\r\n  };\r\n\r\n  const addTask = (text, important, deadline) => {\r\n    axios.post(process.env.REACT_APP_SERVER_URL+'/todos/add',   {\r\n      text,\r\n      startDate: new Date().toISOString().slice(0,10),\r\n      deadline,\r\n      important,\r\n      finishDate: new Date(1998,12,31).toISOString().slice(0,10),\r\n      color: `rgb(${Math.floor(Math.random() *100)},${Math.floor(Math.random() *100)},${Math.floor(Math.random() *100)})`\r\n    }).then(r => {\r\n      const newTask = {\r\n        _id: r.data,\r\n        text,\r\n        startDate: new Date().toISOString().slice(0,10),\r\n        deadline,\r\n        important,\r\n        finishDate: new Date(1998,12,31).toISOString().slice(0,10),\r\n        color: `rgb(${Math.floor(Math.random() *100)},${Math.floor(Math.random() *100)},${Math.floor(Math.random() *100)})`,\r\n      }\r\n      setTasks([...tasks, newTask])\r\n    })\r\n      .catch(err => console.log(err));\r\n    setTaskNumber(++taskNumber);\r\n    informationNotification(\"Task added\");\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <div className=\"App container-fluid\">\r\n          <div className=\"row\">\r\n            <h1 className=\"text-center p-2 col-12\" >ToDo App</h1>\r\n            <section className='col-12 mb-3'>\r\n              <AddTask addTask={addTask}/>\r\n            </section>\r\n            <hr style={{width: '100vw'}}/>\r\n            <article className='col-12'>\r\n              <TaskList tasks={tasks} finish={handleFinishTask} delete={handleDeleteTask} handleColorChange={handleColorChange}/>\r\n            </article>\r\n          </div>\r\n        </div>\r\n        <ToastContainer />\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './component/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}